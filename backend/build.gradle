plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id("io.swagger.core.v3.swagger-gradle-plugin") version "2.2.27"
    id "org.sonarqube" version "6.0.1.5171"
    id 'jacoco'
    id 'org.owasp.dependencycheck' version "12.0.2"
}

group = 'avmp'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.5'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // PostgreSQL Driver
    runtimeOnly 'org.postgresql:postgresql'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport' // Generar reporte de cobertura despu√©s de los tests
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

dependencyCheck {
    failBuildOnCVSS = 7.0
    suppressionFile = 'dependency-check-suppressions.xml'
    formats = ['HTML', 'XML', 'JSON']
    outputDirectory = "${buildDir}/reports/dependency-check"
}

sonarqube {
    properties {
        property "sonar.projectKey", "avmp_todo-list"
        property "sonar.projectName", "Todo-list"
        property "sonar.projectVersion", version
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.binaries", "${buildDir}/classes/java/main"
        property "sonar.junit.reportPaths", "${buildDir}/test-results/test"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "**/static/**,**/templates/**"
        property "sonar.dependencyCheck.reportPath", "${buildDir}/reports/dependency-check/dependency-check-report.xml"
        property "sonar.dependencyCheck.htmlReportPath", "${buildDir}/reports/dependency-check/dependency-check-report.html"
    }
}